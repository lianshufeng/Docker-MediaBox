version: "3"

services:
  # User : admin/admin
  filebrowser:
    image: filebrowser/filebrowser:${filebrowser_version}
    ports:
      - "80:80"
    volumes:
      - "${store}:/srv"
      - "${filebrowser_store}/database.db:/database.db"
      - "${filebrowser_store}/.filebrowser.json:/.filebrowser.json"
    container_name: filebrowser
    restart: always
   


# 下载工具
  ariang:
    build:
      context: ./docker-ariang/
      dockerfile: Dockerfile
    image: ariang
    ports:
      - "6800:6800"
      - "82:80"
      - "6888:8080"
    volumes:
      - "${store}/downloads:/aria2/downloads"
      - "${ariang_store}/conf:/aria2/conf"
    container_name: ariang
    restart: always
    
# samba \\ip\share
  samba:
    build:
      context: ./docker-samba/
      dockerfile: Dockerfile
    image: samba
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    tmpfs:
      - /tmp
    stdin_open: true
    deploy:
      resources:
        limits:
          memory: 512M #限制内存
    tty: true
    volumes:
      - "${store}:/mount"
    container_name: samba
    restart: always
    command: '-p'
    environment:
      - TZ=UTC+08
      - NMBD=yes
      - WORKGROUP=WORKGROUP
      - SHARE=share;/mount;yes;no;yes;;
# minidlna
  minidlna:
    build:
      context: ./docker-minidlna/minidlna/
      dockerfile: Dockerfile
    image: minidlna
#    network_mode: 'host'  # 网络模式设为 host
    environment:
      - MINIDLNA_MEDIA_DIR=/media
      - MINIDLNA_FRIENDLY_NAME=MiniDLNA
      - MINIDLNA_INOTIFY=yes
      - MINIDLNA_NOTIFY_INTERVAL=3
      - MINIDLNA_NETWORK_INTERFACE=eth1
    ports:
      - "1900:1900/udp"
      - "8200:8200/tcp"
    volumes:
      - ${minidlna_store}/cache:/var/lib/minidlna
      - ${store}:/media
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    restart: always